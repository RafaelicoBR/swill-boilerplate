/*
  SASS variables are information about icon's compiled state, stored under its original file name

  .icon-home
    width: $icon-home-width

  The large array-like variables contain all information about a single icon
  $icon-home: x y offset_x offset_y width height total_width total_height image_path

  At the bottom of this section, we provide information about the spritesheet itself
  $spritesheet: width height image $spritesheet-sprites
  */
$left-arrow-name: 'left-arrow'
$left-arrow-x: 0px
$left-arrow-y: 0px
$left-arrow-offset-x: 0px
$left-arrow-offset-y: 0px
$left-arrow-width: 32px
$left-arrow-height: 32px
$left-arrow-total-width: 32px
$left-arrow-total-height: 66px
$left-arrow-image: '../img/sprite.png'
$left-arrow: (0px, 0px, 0px, 0px, 32px, 32px, 32px, 66px, '../img/sprite.png', 'left-arrow', )
$right-arrow-name: 'right-arrow'
$right-arrow-x: 0px
$right-arrow-y: 34px
$right-arrow-offset-x: 0px
$right-arrow-offset-y: -34px
$right-arrow-width: 32px
$right-arrow-height: 32px
$right-arrow-total-width: 32px
$right-arrow-total-height: 66px
$right-arrow-image: '../img/sprite.png'
$right-arrow: (0px, 34px, 0px, -34px, 32px, 32px, 32px, 66px, '../img/sprite.png', 'right-arrow', )
$spritesheet-width: 32px
$spritesheet-height: 66px
$spritesheet-image: '../img/sprite.png'
$spritesheet-sprites: ($left-arrow, $right-arrow, )
$spritesheet: (32px, 66px, '../img/sprite.png', $spritesheet-sprites, )

/*
  The provided mixins are intended to be used with the array-like variables

  .icon-home
    @include sprite-width($icon-home)

  .icon-email
    @include sprite($icon-email)
  */
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

/*
  The `sprites` mixin generates identical output to the CSS template
    but can be overridden inside of SASS

  @include sprites($spritesheet-sprites)
  */
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
